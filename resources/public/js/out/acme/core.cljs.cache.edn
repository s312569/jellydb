;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name acme.core, :imports nil, :requires {ajax.core ajax.core, dom om.dom, clojure.browser.repl clojure.browser.repl, cljs-http.client cljs-http.client, om.dom om.dom, cljs.core.async cljs.core.async, events goog.events, om.core om.core, om om.core, repl clojure.browser.repl, goog.events goog.events, http cljs-http.client}, :uses {POST ajax.core, pub cljs.core.async, <! cljs.core.async, chan cljs.core.async, sub cljs.core.async, >! cljs.core.async, GET ajax.core, put! cljs.core.async}, :defs {t_acme$core49583 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name acme.core/t_acme$core49583, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 372, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, export-loop {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 149, :column 7, :end-line 149, :end-column 18, :arglists (quote ([owner]))}, :name acme.core/export-loop, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 18, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, t_acme$core49577 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/t_acme$core49577, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 363, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, selected-loop {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 127, :column 7, :end-line 127, :end-column 20, :arglists (quote ([owner]))}, :name acme.core/selected-loop, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 20, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, change {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 15, :column 7, :end-line 15, :end-column 13, :arglists (quote ([e owner]))}, :name acme.core/change, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 13, :method-params ([e owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e owner]))}, t_acme$core49530 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49530, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 214, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49664 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([outer app owner meta49665])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/->t_acme$core49664, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([outer app owner meta49665]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 395, :max-fixed-arity 4, :fn-var true, :arglists (quote ([outer app owner meta49665])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49539 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([protein p__49536 owner map__49537 acc description sequence meta49540])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49539, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([protein p__49536 owner map__49537 acc description sequence meta49540]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 256, :max-fixed-arity 8, :fn-var true, :arglists (quote ([protein p__49536 owner map__49537 acc description sequence meta49540])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, check-if-checked {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 107, :column 7, :end-line 107, :end-column 23, :arglists (quote ([owner np]))}, :name acme.core/check-if-checked, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 23, :method-params ([owner np]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner np]))}, app-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 371, :column 7, :end-line 371, :end-column 15, :arglists (quote ([app owner]))}, :name acme.core/app-view, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 15, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner]))}, proteins-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 285, :column 7, :end-line 285, :end-column 20, :arglists (quote ([search owner]))}, :name acme.core/proteins-view, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 20, :method-params ([search owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 2, :fn-var true, :arglists (quote ([search owner]))}, main {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 404, :column 7, :end-line 404, :end-column 11, :arglists (quote ([]))}, :name acme.core/main, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->t_acme$core49521 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([export _ owner meta49522])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/->t_acme$core49521, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([export _ owner meta49522]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 200, :max-fixed-arity 4, :fn-var true, :arglists (quote ([export _ owner meta49522])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, outer {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 393, :column 7, :end-line 393, :end-column 12, :arglists (quote ([app owner]))}, :name acme.core/outer, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 12, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 393, :end-line 393, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner]))}, t_acme$core49571 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49571, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 324, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, log {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 19, :column 7, :end-line 19, :end-column 10, :arglists (quote ([m]))}, :name acme.core/log, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 10, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, t_acme$core49661 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/t_acme$core49661, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 395, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-fasta-key {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 55, :column 7, :end-line 55, :end-column 20, :arglists (quote ([owner]))}, :name acme.core/get-fasta-key, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 20, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, nav {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 212, :column 7, :end-line 212, :end-column 10, :arglists (quote ([_ owner]))}, :name acme.core/nav, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 10, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, ->t_acme$core49559 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillReceiveProps om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([proteins-view search owner meta49560])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillReceiveProps om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49559, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([proteins-view search owner meta49560]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 286, :max-fixed-arity 4, :fn-var true, :arglists (quote ([proteins-view search owner meta49560])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49553 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillReceiveProps om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([proteins-view search owner meta49554])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillReceiveProps om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49553, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([proteins-view search owner meta49554]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 286, :max-fixed-arity 4, :fn-var true, :arglists (quote ([proteins-view search owner meta49554])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49518 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([export _ owner meta49519])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/->t_acme$core49518, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([export _ owner meta49519]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 200, :max-fixed-arity 4, :fn-var true, :arglists (quote ([export _ owner meta49519])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49518 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/t_acme$core49518, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 200, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49620 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app-view app owner meta49621])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name acme.core/->t_acme$core49620, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([app-view app owner meta49621]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 372, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app-view app owner meta49621])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-peptide {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 93, :column 7, :end-line 93, :end-column 18, :arglists (quote ([owner]))}, :name acme.core/get-peptide, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 18, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, t_acme$core49511 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49511, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 172, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, serve-proteins {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 69, :column 7, :end-line 69, :end-column 21, :arglists (quote ([owner]))}, :name acme.core/serve-proteins, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 21, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, t_acme$core49664 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/t_acme$core49664, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 395, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init-total-proteins {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 82, :column 7, :end-line 82, :end-column 26, :arglists (quote ([owner]))}, :name acme.core/init-total-proteins, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 26, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, protein-view {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 323, :column 7, :end-line 323, :end-column 19, :arglists (quote ([acc owner]))}, :name acme.core/protein-view, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 19, :method-params ([acc owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 2, :fn-var true, :arglists (quote ([acc owner]))}, search-submit {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 160, :column 7, :end-line 160, :end-column 20, :arglists (quote ([owner]))}, :name acme.core/search-submit, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 20, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, home {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 361, :column 7, :end-line 361, :end-column 11, :arglists (quote ([app owner]))}, :name acme.core/home, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 11, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner]))}, change-state! {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 31, :column 7, :end-line 31, :end-column 20, :arglists (quote ([owner topic state]))}, :name acme.core/change-state!, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 20, :method-params ([owner topic state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner topic state]))}, ->t_acme$core49580 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([home app owner meta49581])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/->t_acme$core49580, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([home app owner meta49581]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 363, :max-fixed-arity 4, :fn-var true, :arglists (quote ([home app owner meta49581])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, pub-info {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 40, :column 7, :end-line 40, :end-column 15, :arglists (quote ([owner topic data]))}, :name acme.core/pub-info, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 15, :method-params ([owner topic data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner topic data]))}, ->t_acme$core49661 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([outer app owner meta49662])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/->t_acme$core49661, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([outer app owner meta49662]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 395, :max-fixed-arity 4, :fn-var true, :arglists (quote ([outer app owner meta49662])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49547 {:num-fields 8, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49547, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 256, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49565 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49565, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 324, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49524 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nav _ owner meta49525])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49524, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([nav _ owner meta49525]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 214, :max-fixed-arity 4, :fn-var true, :arglists (quote ([nav _ owner meta49525])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49530 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nav _ owner meta49531])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49530, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([nav _ owner meta49531]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 214, :max-fixed-arity 4, :fn-var true, :arglists (quote ([nav _ owner meta49531])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49571 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([protein-view acc owner meta49572])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49571, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([protein-view acc owner meta49572]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 324, :max-fixed-arity 4, :fn-var true, :arglists (quote ([protein-view acc owner meta49572])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, is-selected?-loop {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 138, :column 7, :end-line 138, :end-column 24, :arglists (quote ([owner]))}, :name acme.core/is-selected?-loop, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 24, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, search {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 170, :column 7, :end-line 170, :end-column 13, :arglists (quote ([app owner]))}, :name acme.core/search, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 13, :method-params ([app owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([app owner]))}, export {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 198, :column 7, :end-line 198, :end-column 13, :arglists (quote ([_ owner]))}, :name acme.core/export, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 13, :method-params ([_ owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ owner]))}, ->t_acme$core49565 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([protein-view acc owner meta49566])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49565, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([protein-view acc owner meta49566]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 324, :max-fixed-arity 4, :fn-var true, :arglists (quote ([protein-view acc owner meta49566])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49583 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app-view app owner meta49584])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name acme.core/->t_acme$core49583, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([app-view app owner meta49584]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 372, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app-view app owner meta49584])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49539 {:num-fields 8, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49539, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 256, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49559 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillReceiveProps om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49559, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, error-handler {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 45, :column 7, :end-line 45, :end-column 20, :arglists (quote ([{:keys [status status-text]}]))}, :name acme.core/error-handler, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 20, :method-params ([p__49066]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [status status-text]}]))}, t_acme$core49620 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name acme.core/t_acme$core49620, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 372, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49511 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([search app owner meta49512])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49511, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([search app owner meta49512]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 172, :max-fixed-arity 4, :fn-var true, :arglists (quote ([search app owner meta49512])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49524 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49524, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 214, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, request-loop {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([owner topic state]))}, :name acme.core/request-loop, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 19, :method-params ([owner topic state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner topic state]))}, ->t_acme$core49547 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([protein p__49536 owner map__49545 acc description sequence meta49548])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillReceiveProps cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49547, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([protein p__49536 owner map__49545 acc description sequence meta49548]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 256, :max-fixed-arity 8, :fn-var true, :arglists (quote ([protein p__49536 owner map__49545 acc description sequence meta49548])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49521 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/t_acme$core49521, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 200, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, protein-loop {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 118, :column 7, :end-line 118, :end-column 19, :arglists (quote ([owner]))}, :name acme.core/protein-loop, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 19, :method-params ([owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([owner]))}, t_acme$core49553 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillReceiveProps om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49553, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49505 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([search app owner meta49506])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/->t_acme$core49505, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([search app owner meta49506]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 172, :max-fixed-arity 4, :fn-var true, :arglists (quote ([search app owner meta49506])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_acme$core49577 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([home app owner meta49578])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/->t_acme$core49577, :variadic false, :file "src/cljs/jellydb/core.cljs", :method-params ([home app owner meta49578]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 363, :max-fixed-arity 4, :fn-var true, :arglists (quote ([home app owner meta49578])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_acme$core49580 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name acme.core/t_acme$core49580, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 363, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, protein {:protocol-inline nil, :meta {:file "/home/jason/Dropbox/jellydb/src/cljs/jellydb/core.cljs", :line 255, :column 7, :end-line 255, :end-column 14, :arglists (quote ([{:keys [acc description sequence]} owner]))}, :name acme.core/protein, :variadic false, :file "src/cljs/jellydb/core.cljs", :end-column 14, :method-params ([p__49536 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [acc description sequence]} owner]))}, t_acme$core49505 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name acme.core/t_acme$core49505, :file "src/cljs/jellydb/core.cljs", :type true, :anonymous true, :column 3, :line 172, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:description meta49512 :chan meta49578 meta49540 app-view proteins-view outer :home meta49581 meta49506 meta49662 owner :o :selected nav :keywords? :key :peptide :else meta49621 description :acc protein-view meta49572 :response-format :status-text home :start :params :pos :recur :msg :topic :state meta49522 _ :search :export map__49545 acc :error-handler meta49531 meta49519 :total :keys :notif-chan :req-chan p__49536 :status :id :accession search export :checked meta49665 :count meta49554 map__49537 :sequence meta49584 :shared meta49566 :pub-chan :protein meta49548 :target :json quote meta49560 meta49525 :arglists app :selected? :handler :nav :i sequence :view protein :proteins :text :data}, :order [:text :notif-chan :recur :chan :else :pub-chan :topic :state :data :status :status-text :id :msg :key :selected :error-handler :params :handler :response-format :keywords? :i :json :start :proteins :o :count :total :protein :peptide :accession :acc :selected? :checked :nav :export :view search :arglists quote app owner meta49506 meta49512 export _ meta49519 meta49522 :pos nav meta49525 meta49531 :description :sequence protein :keys acc description sequence p__49536 map__49537 meta49540 map__49545 meta49548 :search proteins-view meta49554 meta49560 protein-view meta49566 meta49572 home meta49578 meta49581 :home app-view meta49584 meta49621 outer meta49662 meta49665 :shared :target :req-chan]}, :doc nil}